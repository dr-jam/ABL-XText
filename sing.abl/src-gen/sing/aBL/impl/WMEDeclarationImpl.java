/**
 * generated by Xtext 2.28.0
 */
package sing.aBL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.eclipse.xtext.xbase.XExpression;

import sing.aBL.ABLPackage;
import sing.aBL.WMEDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>WME Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link sing.aBL.impl.WMEDeclarationImpl#getVarName <em>Var Name</em>}</li>
 *   <li>{@link sing.aBL.impl.WMEDeclarationImpl#getExtendName <em>Extend Name</em>}</li>
 *   <li>{@link sing.aBL.impl.WMEDeclarationImpl#getAblVariableDeclaration <em>Abl Variable Declaration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WMEDeclarationImpl extends AblDeclarationImpl implements WMEDeclaration
{
  /**
   * The default value of the '{@link #getVarName() <em>Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected static final String VAR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVarName() <em>Var Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected String varName = VAR_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getExtendName() <em>Extend Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtendName()
   * @generated
   * @ordered
   */
  protected static final String EXTEND_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExtendName() <em>Extend Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtendName()
   * @generated
   * @ordered
   */
  protected String extendName = EXTEND_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAblVariableDeclaration() <em>Abl Variable Declaration</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAblVariableDeclaration()
   * @generated
   * @ordered
   */
  protected EList<XExpression> ablVariableDeclaration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WMEDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ABLPackage.Literals.WME_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVarName()
  {
    return varName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVarName(String newVarName)
  {
    String oldVarName = varName;
    varName = newVarName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ABLPackage.WME_DECLARATION__VAR_NAME, oldVarName, varName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExtendName()
  {
    return extendName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExtendName(String newExtendName)
  {
    String oldExtendName = extendName;
    extendName = newExtendName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ABLPackage.WME_DECLARATION__EXTEND_NAME, oldExtendName, extendName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<XExpression> getAblVariableDeclaration()
  {
    if (ablVariableDeclaration == null)
    {
      ablVariableDeclaration = new EObjectContainmentEList<XExpression>(XExpression.class, this, ABLPackage.WME_DECLARATION__ABL_VARIABLE_DECLARATION);
    }
    return ablVariableDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ABLPackage.WME_DECLARATION__ABL_VARIABLE_DECLARATION:
        return ((InternalEList<?>)getAblVariableDeclaration()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ABLPackage.WME_DECLARATION__VAR_NAME:
        return getVarName();
      case ABLPackage.WME_DECLARATION__EXTEND_NAME:
        return getExtendName();
      case ABLPackage.WME_DECLARATION__ABL_VARIABLE_DECLARATION:
        return getAblVariableDeclaration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ABLPackage.WME_DECLARATION__VAR_NAME:
        setVarName((String)newValue);
        return;
      case ABLPackage.WME_DECLARATION__EXTEND_NAME:
        setExtendName((String)newValue);
        return;
      case ABLPackage.WME_DECLARATION__ABL_VARIABLE_DECLARATION:
        getAblVariableDeclaration().clear();
        getAblVariableDeclaration().addAll((Collection<? extends XExpression>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ABLPackage.WME_DECLARATION__VAR_NAME:
        setVarName(VAR_NAME_EDEFAULT);
        return;
      case ABLPackage.WME_DECLARATION__EXTEND_NAME:
        setExtendName(EXTEND_NAME_EDEFAULT);
        return;
      case ABLPackage.WME_DECLARATION__ABL_VARIABLE_DECLARATION:
        getAblVariableDeclaration().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ABLPackage.WME_DECLARATION__VAR_NAME:
        return VAR_NAME_EDEFAULT == null ? varName != null : !VAR_NAME_EDEFAULT.equals(varName);
      case ABLPackage.WME_DECLARATION__EXTEND_NAME:
        return EXTEND_NAME_EDEFAULT == null ? extendName != null : !EXTEND_NAME_EDEFAULT.equals(extendName);
      case ABLPackage.WME_DECLARATION__ABL_VARIABLE_DECLARATION:
        return ablVariableDeclaration != null && !ablVariableDeclaration.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (varName: ");
    result.append(varName);
    result.append(", extendName: ");
    result.append(extendName);
    result.append(')');
    return result.toString();
  }

} //WMEDeclarationImpl
